"use strict";var cov_in3x8zhwd=function(){var path="/Users/psantos/Desktop/IWA/CA/src/backend/controllers/user_controller.ts",hash="52d28eb271dfa2e72da3f92e3e37fe9b8a0ec5f4",Function=function(){}.constructor,global=new Function('return this')(),gcv="__coverage__",coverageData={path:"/Users/psantos/Desktop/IWA/CA/src/backend/controllers/user_controller.ts",statementMap:{"0":{start:{line:2,column:0},end:{line:2,column:62}},"1":{start:{line:3,column:16},end:{line:3,column:34}},"2":{start:{line:4,column:24},end:{line:4,column:66}},"3":{start:{line:5,column:17},end:{line:5,column:35}},"4":{start:{line:6,column:0},end:{line:6,column:32}},"5":{start:{line:8,column:0},end:{line:16,column:3}},"6":{start:{line:9,column:25},end:{line:9,column:58}},"7":{start:{line:10,column:4},end:{line:15,column:7}},"8":{start:{line:11,column:8},end:{line:11,column:23}},"9":{start:{line:13,column:8},end:{line:13,column:24}},"10":{start:{line:14,column:8},end:{line:14,column:28}},"11":{start:{line:18,column:0},end:{line:44,column:3}},"12":{start:{line:19,column:25},end:{line:19,column:58}},"13":{start:{line:20,column:18},end:{line:20,column:26}},"14":{start:{line:21,column:4},end:{line:24,column:5}},"15":{start:{line:22,column:8},end:{line:22,column:24}},"16":{start:{line:23,column:8},end:{line:23,column:50}},"17":{start:{line:26,column:20},end:{line:31,column:6}},"18":{start:{line:33,column:4},end:{line:36,column:5}},"19":{start:{line:34,column:8},end:{line:34,column:24}},"20":{start:{line:35,column:8},end:{line:35,column:65}},"21":{start:{line:38,column:4},end:{line:43,column:7}},"22":{start:{line:39,column:8},end:{line:39,column:23}},"23":{start:{line:41,column:8},end:{line:41,column:24}},"24":{start:{line:42,column:8},end:{line:42,column:28}}},fnMap:{"0":{name:"(anonymous_0)",decl:{start:{line:8,column:32},end:{line:8,column:33}},loc:{start:{line:8,column:52},end:{line:16,column:1}},line:8},"1":{name:"(anonymous_1)",decl:{start:{line:10,column:31},end:{line:10,column:32}},loc:{start:{line:10,column:47},end:{line:12,column:5}},line:10},"2":{name:"(anonymous_2)",decl:{start:{line:12,column:13},end:{line:12,column:14}},loc:{start:{line:12,column:26},end:{line:15,column:5}},line:12},"3":{name:"(anonymous_3)",decl:{start:{line:18,column:33},end:{line:18,column:34}},loc:{start:{line:18,column:53},end:{line:44,column:1}},line:18},"4":{name:"(anonymous_4)",decl:{start:{line:38,column:38},end:{line:38,column:39}},loc:{start:{line:38,column:54},end:{line:40,column:5}},line:38},"5":{name:"(anonymous_5)",decl:{start:{line:40,column:13},end:{line:40,column:14}},loc:{start:{line:40,column:26},end:{line:43,column:5}},line:40}},branchMap:{"0":{loc:{start:{line:21,column:4},end:{line:24,column:5}},type:"if",locations:[{start:{line:21,column:4},end:{line:24,column:5}},{start:{line:21,column:4},end:{line:24,column:5}}],line:21},"1":{loc:{start:{line:21,column:10},end:{line:21,column:83}},type:"binary-expr",locations:[{start:{line:21,column:10},end:{line:21,column:43}},{start:{line:21,column:47},end:{line:21,column:83}}],line:21},"2":{loc:{start:{line:33,column:4},end:{line:36,column:5}},type:"if",locations:[{start:{line:33,column:4},end:{line:36,column:5}},{start:{line:33,column:4},end:{line:36,column:5}}],line:33}},s:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0},f:{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0},b:{"0":[0,0],"1":[0,0],"2":[0,0]},_coverageSchema:"332fd63041d2c1bcb487cc26dd0d5f7d97098a6c"},coverage=global[gcv]||(global[gcv]={});if(coverage[path]&&coverage[path].hash===hash){return coverage[path];}coverageData.hash=hash;return coverage[path]=coverageData;}();cov_in3x8zhwd.s[0]++;Object.defineProperty(exports,"__esModule",{value:true});var express_1=(cov_in3x8zhwd.s[1]++,require("express"));var user_repository_1=(cov_in3x8zhwd.s[2]++,require("../repositories/user_repository"));var userRouter=(cov_in3x8zhwd.s[3]++,express_1.Router());cov_in3x8zhwd.s[4]++;exports.userRouter=userRouter;// Retruns all users
cov_in3x8zhwd.s[5]++;userRouter.get("/api/v1/users",function(req,res){cov_in3x8zhwd.f[0]++;var userRepository=(cov_in3x8zhwd.s[6]++,user_repository_1.getRepository());cov_in3x8zhwd.s[7]++;userRepository.find().then(function(user){cov_in3x8zhwd.f[1]++;cov_in3x8zhwd.s[8]++;res.json(user);}).catch(function(e){cov_in3x8zhwd.f[2]++;cov_in3x8zhwd.s[9]++;res.status(500);cov_in3x8zhwd.s[10]++;res.send(e.message);});});// Creates a new user account
cov_in3x8zhwd.s[11]++;userRouter.post("/api/v1/users",function(req,res){cov_in3x8zhwd.f[3]++;var userRepository=(cov_in3x8zhwd.s[12]++,user_repository_1.getRepository());var newUser=(cov_in3x8zhwd.s[13]++,req.body);cov_in3x8zhwd.s[14]++;if(!((cov_in3x8zhwd.b[1][0]++,typeof newUser.email==="string")||(cov_in3x8zhwd.b[1][1]++,typeof newUser.password==="string"))){cov_in3x8zhwd.b[0][0]++;cov_in3x8zhwd.s[15]++;res.status(400);cov_in3x8zhwd.s[16]++;res.send("Invalid Username or Password!");}else{cov_in3x8zhwd.b[0][1]++;}// Check if the email is already taken
var userCheck=(cov_in3x8zhwd.s[17]++,userRepository.findOne({where:{email:newUser.email,password:newUser.password}}));// Return error 400 in case email has already been taken
cov_in3x8zhwd.s[18]++;if(userCheck){cov_in3x8zhwd.b[2][0]++;cov_in3x8zhwd.s[19]++;res.status(400);cov_in3x8zhwd.s[20]++;res.send("Email already taken, please try another one.");}else{cov_in3x8zhwd.b[2][1]++;}// Return the new user object.
cov_in3x8zhwd.s[21]++;userRepository.find(newUser).then(function(user){cov_in3x8zhwd.f[4]++;cov_in3x8zhwd.s[22]++;res.json(user);}).catch(function(e){cov_in3x8zhwd.f[5]++;cov_in3x8zhwd.s[23]++;res.status(500);cov_in3x8zhwd.s[24]++;res.send(e.message);});});// Handle HTTP requests
// export function getHandlers(_userRepository: Repository<User>) {
//     const getAllUsersHandler = (req: Request, res: Response) => {
//         (async () => {
//             const users = await _userRepository.find();
//             res.json(users).send();
//         })();
//     };
//     const getUserByIdHandler = (req: Request, res: Response) => {
//         const id = parseInt(req.params.id);
//         const user = _userRepository.findOne({
//             where: {
//                 id: id
//             }
//         });
//         if (user === undefined) {
//             res.status(404).send();
//         }
//         res.json(user).send();
//     };
//     const createUser = (req: Request, res: Response) => {
//         (async () => {
//             const email = req.body.email;
//             const password = req.body.password;
//             if (!email || password) {
//                 res.status(400).send();
//             } else {
//                 const newuser = await _userRepository.save({ email: email, password: password});
//                 return res.json(newuser);
//             }            
//         })();
//     };
//     const deleteUser =  (req: Request, res: Response) => {
//         // TODO
//         res.json({});
//     };
//     const getTokenHandler = (req: Request, res: Response) => {
//         (async () => {
//             const body = req.body;
//             const email = body.email;
//             const password = body.password;
//             if (!email || !password) {
//                 res.status(400).send();
//             } else {
//                 const user = await _userRepository.findOne({
//                     where: {
//                         email: email,
//                         password: password
//                     }
//                 });
//                 if (!user) {
//                     res.status(401).send();
//                 } else {
//                     const payload = { id: user.id };
//                     const secret = process.env.AUTH_SECRET;
//                     if (typeof secret === "string") {
//                         const token = jwt.sign(payload, secret);
//                         res.json({ token: token });
//                     } else {
//                         res.status(500).send();
//                     }
//                 }
//             }
//         })();
//     };
//     return {
//         getAllUsersHandler,
//         getUserByIdHandler,
//         createUser,
//         deleteUser,
//         getTokenHandler
//     };
// }
// export function getLinksRouter() {
//     const handlers = getHandlers(getRepository());
//     const userRouter = Router();
//     userRouter.post("/api/v1/users", handlers.getTokenHandler);
//     return userRouter;
// }
//# sourceMappingURL=data:application/json;charset=utf-8;base64,